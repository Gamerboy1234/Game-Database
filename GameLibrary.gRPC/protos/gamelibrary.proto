
syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.gamelibrary";
option java_outer_classname = "GameLibraryProto";
option objc_class_prefix = "GLB";

package gamelibrary;

// Interface exported by the server.
service GameLibrary {

	///////////////////////////////////////////////////////////////
	// Games
	///////////////////////////////////////////////////////////////

	// Obtains a list of games that match the request parameters.
	// Streamed rather than returned at once (e.g. in a response message with a repeated field)
	rpc SearchGames(GamesSearchRequest) returns (stream GameRecord) {}

	// Add a new game record
	rpc AddGame(GameRecord) returns (GameResult) {}

	// Edit a game record
	rpc EditGame(GameRecord) returns (GameResult) {}

	// Delete a game record
	rpc DeleteGame(GameRecord) returns (GameResult) {}

	///////////////////////////////////////////////////////////////
	// Genres
	///////////////////////////////////////////////////////////////

	// Obtains a list of genres that match the request parameters.
	// Streamed rather than returned at once (e.g. in a response message with a repeated field)
	rpc SearchGenres(GenresSearchRequest) returns (stream GenreRecord) {}

	// Add a new genre record
	rpc AddGenre(GenreRecord) returns (GenreResult) {}

	// Edit a genre record
	rpc EditGenre(GenreRecord) returns (GenreResult) {}

	// Delete a genre record
	rpc DeleteGenre(GenreRecord) returns (GenreResult) {}

	///////////////////////////////////////////////////////////////
	// Ratings
	///////////////////////////////////////////////////////////////

	// Obtains a list of ratings that match the request parameters.
	// Streamed rather than returned at once (e.g. in a response message with a repeated field)
	rpc SearchRatings(RatingsSearchRequest) returns (stream RatingRecord) {}

	// Add a new rating record
	rpc AddRating(RatingRecord) returns (RatingResult) {}

	// Edit a rating record
	rpc EditRating(RatingRecord) returns (RatingResult) {}

	// Delete a rating record
	rpc DeleteRating(RatingRecord) returns (RatingResult) {}

	///////////////////////////////////////////////////////////////
	// Reviews
	///////////////////////////////////////////////////////////////

	// Obtains a list of reviews that match the request parameters.
	// Streamed rather than returned at once (e.g. in a response message with a repeated field)
	rpc SearchReviews(ReviewsSearchRequest) returns (stream ReviewRecord) {}

	// Add a new review record
	rpc AddReview(ReviewRecord) returns (ReviewResult) {}

	// Edit a review record
	rpc EditReview(ReviewRecord) returns (ReviewResult) {}

	// Delete a review record
	rpc DeleteReview(ReviewRecord) returns (ReviewResult) {}

	///////////////////////////////////////////////////////////////
	// Platforms
	///////////////////////////////////////////////////////////////

	// Obtains a list of platforms that match the request parameters.
	// Streamed rather than returned at once (e.g. in a response message with a repeated field)
	rpc SearchPlatforms(PlatformsSearchRequest) returns (stream PlatformRecord) {}

	// Add a new platform record
	rpc AddPlatform(PlatformRecord) returns (PlatformResult) {}

	// Edit a platform record
	rpc EditPlatform(PlatformRecord) returns (PlatformResult) {}

	// Delete a platform record
	rpc DeletePlatform(PlatformRecord) returns (PlatformResult) {}

	///////////////////////////////////////////////////////////////
	// GameGenres
	///////////////////////////////////////////////////////////////

	// Obtains a list of games that match the request parameters.
	// Streamed rather than returned at once (e.g. in a response message with a repeated field)
	rpc SearchGameGenres(GameGenresSearchRequest) returns (stream GameGenreRecord) {}
	rpc SearchGameGenresByGameId(GameGenresSearchRequest) returns (stream GameGenreRecord) {}
	rpc SearchGameGenresByGenreId(GameGenresSearchRequest) returns (stream GameGenreRecord) {}

	// Add a new gamegenre record
	rpc AddGameGenre(GameGenreRecord) returns (GameGenreResult) {}

	// Edit a gamegenre record
	rpc EditGameGenre(GameGenreRecord) returns (GameGenreResult) {}

	// Delete a gamegenre record
	rpc DeleteGameGenre(GameGenreRecord) returns (GameGenreResult) {}

	///////////////////////////////////////////////////////////////
	// GamePlatforms
	///////////////////////////////////////////////////////////////

	// Obtains a list of gameplatforms that match the request parameters.
	// Streamed rather than returned at once (e.g. in a response message with a repeated field)
	rpc SearchGamePlatforms(GamePlatformsSearchRequest) returns (stream GamePlatformRecord) {}
	rpc SearchGamePlatformsByGameId(GamePlatformsSearchRequest) returns (stream GamePlatformRecord) {}
	rpc SearchGamePlatformsByPlatformId(GamePlatformsSearchRequest) returns (stream GamePlatformRecord) {}

	// Add a new gameplatform record
	rpc AddGamePlatform(GamePlatformRecord) returns (GamePlatformResult) {}

	// Edit a gameplatform record
	rpc EditGamePlatform(GamePlatformRecord) returns (GamePlatformResult) {}

	// Delete a gameplatform record
	rpc DeleteGamePlatform(GamePlatformRecord) returns (GamePlatformResult) {}

	///////////////////////////////////////////////////////////////
	// GameReviews
	///////////////////////////////////////////////////////////////

	// Obtains a list of gamereviews that match the request parameters.
	// Streamed rather than returned at once (e.g. in a response message with a repeated field)
	rpc SearchGameReviews(SearchGameReviewsRequest) returns (stream GameReviewRecord) {}
	rpc SearchGameReviewByGameId(SearchGameReviewByGameIdRequest) returns (stream GameReviewRecord) {}
	rpc SearchGameReviewByReviewId(SearchGameReviewByReviewIdRequest) returns (stream GameReviewRecord) {}

	// Add a new gamereview record
	rpc AddGameReview(GameReviewRecord) returns (GameReviewResult) {}

	// Edit a gamereview record
	rpc EditGameReview(GameReviewRecord) returns (GameReviewResult) {}

	// Delete a gamereview record
	rpc DeleteGameReview(GameReviewRecord) returns (GameReviewResult) {}

	///////////////////////////////////////////////////////////////
	// GameRatings
	///////////////////////////////////////////////////////////////

	// Obtains a list of gameratings that match the request parameters.
	// Streamed rather than returned at once (e.g. in a response message with a repeated field)
	rpc SearchGameRatings(GameRatingsSearchRequest) returns (stream GameRatingRecord) {}
	rpc SearchGameRatingByGameId(GameRatingsSearchRequest) returns (stream GameRatingRecord) {}
	rpc SearchGameRatingByReviewId(GameRatingsSearchRequest) returns (stream GameRatingRecord) {}

	// Add a new gamerating record
	rpc AddGameRating(GameRatingRecord) returns (GameRatingResult) {}

	// Edit a gamerating record
	rpc EditGameRating(GameRatingRecord) returns (GameRatingResult) {}

	// Delete a gamerating record
	rpc DeleteGameRating(GameRatingRecord) returns (GameRatingResult) {}

	
	///////////////////////////////////////////////////////////////
	// GameImages
	///////////////////////////////////////////////////////////////

	// Obtains a list of gameimages that match the request parameters.
	// Streamed rather than returned at once (e.g. in a response message with a repeated field)
	rpc SearchGameImages(GameImagesSearchRequest) returns (stream GameImageRecord) {}
	rpc SearchGameImageByGameId(GameImagesSearchRequest) returns (stream GameImageRecord) {}
	
	// Add a new gameimage record
	rpc AddGameImage(GameImageRecord) returns (GameImageResult) {}

	// Edit a gameimage record
	rpc EditGameImage(GameImageRecord) returns (GameImageResult) {}

	// Delete a gameimage record
	rpc DeleteGameImage(GameImageRecord) returns (GameImageResult) {}


	

}

///////////////////////////////////////////////////////////////
// Games
///////////////////////////////////////////////////////////////

message GamesSearchRequest {
	int64 game_id = 1;
	string game_name = 2;
}

message GameRecord {
	int64 game_id = 1;
	string name = 2;
	string description = 3;
}

message GameResult {
	GameRecord game = 1;
	bool success = 2;
	string error_message = 3;
}

///////////////////////////////////////////////////////////////
// Genres
///////////////////////////////////////////////////////////////

message GenresSearchRequest {
	int64 genre_id = 1;
	string genre_name = 2;
}

message GenreRecord {
	int64 genre_id = 1;
	string name = 2;
	string description = 3;
}

message GenreResult {
	GenreRecord genre = 1;
	bool success = 2;
	string error_message = 3;
}

///////////////////////////////////////////////////////////////
// Rating
///////////////////////////////////////////////////////////////

message RatingsSearchRequest {
	int64 rating_id = 1;
	string rating_name = 2;
}

message RatingRecord {
	int64 rating_id = 1;
	string name = 2;
	string description = 3;
	string symbol = 4;
}

message RatingResult {
	RatingRecord rating = 1;
	bool success = 2;
	string error_message = 3;
}

///////////////////////////////////////////////////////////////
// Reviews
///////////////////////////////////////////////////////////////

message ReviewsSearchRequest {
	int64 review_id = 1;
	string review_name = 2;
}

message ReviewRecord {
	int64 review_id = 1;
	string name = 2;
	string description = 3;
	int64 Rating = 4;
}

message ReviewResult {
	ReviewRecord review = 1;
	bool success = 2;
	string error_message = 3;
}

///////////////////////////////////////////////////////////////
// Platforms
///////////////////////////////////////////////////////////////

message PlatformsSearchRequest {
	int64 platform_id = 1;
	string platform_name = 2;
}

message PlatformRecord {
	int64 platform_id = 1;
	string name = 2;
	string maker = 3;
}

message PlatformResult {
	PlatformRecord platform = 1;
	bool success = 2;
	string error_message = 3;
}

///////////////////////////////////////////////////////////////
// GameGenres
///////////////////////////////////////////////////////////////

message GameGenresSearchRequest {
	int64 gamegenre_id = 1;
}

message GameGenresSearchRequestByGenreId {
	int64 genre_id = 1;
}

message GameGenresSearchRequestByGameId {
	int64 game_id = 1;
}

message GameGenreRecord {
	
	int64 gamegenre_id = 1;
	int64 game_id = 2;
	int64 genre_id = 3;
}

message GameGenreResult {
	GameGenreRecord gamegenre = 1;
	bool success = 2;
	string error_message = 3;
}

///////////////////////////////////////////////////////////////
// GamePlatforms
///////////////////////////////////////////////////////////////

message GamePlatformsSearchRequest {
	int64 gameplatform_id = 1;
}

message GamePlatformsSearchRequestByGameId {
	int64 game_id = 1;
}

message GamePlatformsSearchRequestByPlatformId {
	int64 platform_id = 1;
}

message GamePlatformRecord {
	
	int64 gameplatform_id = 1;
	int64 game_id = 2;
	int64 platform_id = 3;
}

message GamePlatformResult {
	GamePlatformRecord gameplatform = 1;
	bool success = 2;
	string error_message = 3;
}

///////////////////////////////////////////////////////////////
// GameReviews
///////////////////////////////////////////////////////////////

message SearchGameReviewByReviewIdRequest {
	int64 review_id = 1;
}

message SearchGameReviewByGameIdRequest {
	int64 game_id = 1;
}

message SearchGameReviewsRequest {
	int64 gamereview_id = 1;
}

message GameReviewRecord {
	
	int64 gamereview_id = 1;
	int64 game_id = 2;
	int64 review_id = 3;
}

message GameReviewResult {
	GameReviewRecord gamereview = 1;
	bool success = 2;
	string error_message = 3;
}

///////////////////////////////////////////////////////////////
// GameRatings
///////////////////////////////////////////////////////////////

message GameRatingsSearchRequestByRatingId {
	int64 rating_id = 1;
}

message GameRatingsSearchRequestByGameId {
	int64 game_id = 1;
}

message GameRatingsSearchRequest {
	int64 gamerating_id = 1;
}

message GameRatingRecord {
	
	int64 gamerating_id = 1;
	int64 game_id = 2;
	int64 rating_id = 3;
	string notes = 4;
}

message GameRatingResult {
	GameRatingRecord gamerating = 1;
	bool success = 2;
	string error_message = 3;
}

///////////////////////////////////////////////////////////////
// GameImages
///////////////////////////////////////////////////////////////

message GameImagesSearchRequestByGameId {
	int64 game_id = 1;
}

message GameImagesSearchRequest {
	int64 gameimage_id = 1;
}

message GameImageRecord {
	
	int64 gameimage_id = 1;
	int64 game_id = 2;
	bytes image = 3; 
	
}

message GameImageResult {
	GameImageRecord gameimage = 1;
	bool success = 2;
	string error_message = 3;
}


